import { UserProgress, Achievement, UserProfile } from './index';

export interface PWAStatus {
  isInstalled: boolean;
  isOnline: boolean;
  isStandalone: boolean;
  notificationsEnabled: boolean;
}

export interface OfflineData {
  scenarios: K53Scenario[];
  progress: UserProgress[];
  achievements: Achievement[];
  user: UserProfile | null;
  timestamp: number;
}

export interface SyncQueue {
  type: 'progress' | 'achievement' | 'scenario';
  data: UserProgress | Achievement | K53Scenario;
  timestamp: number;
  retryCount: number;
}

export interface PWAStatusData {
  isInstalled: boolean;
  isOnline: boolean;
  isStandalone: boolean;
  notificationsEnabled: boolean;
  lastSync: string;
  offlineDataSize: number;
  syncQueueLength: number;
}

export interface K53Scenario {
  id: string;
  category: string;
  title: string;
  scenario: string;
  question: string;
  options: string[];
  correct: number;
  explanation: string;
  difficulty: "basic" | "intermediate" | "advanced";
  context: string;
  time_of_day?: "day" | "night" | "dawn" | "dusk";
  weather?: "clear" | "rainy" | "foggy" | "snowy";
  language: "en" | "af" | "zu";
  location?: LocationData;
  created_at: string;
  updated_at: string;
}

export interface LocationData {
  id: string;
  name: string;
  province: string;
  coordinates?: {
    latitude: number;
    longitude: number;
  };
  description?: string;
  image_url?: string;
}

// Runtime type validation
export const isOfflineData = (obj: unknown): obj is OfflineData => {
  return (
    typeof obj === "object" &&
    obj !== null &&
    "scenarios" in obj &&
    "progress" in obj &&
    "achievements" in obj &&
    "user" in obj &&
    "timestamp" in obj &&
    Array.isArray((obj as OfflineData).scenarios) &&
    Array.isArray((obj as OfflineData).progress) &&
    Array.isArray((obj as OfflineData).achievements) &&
    typeof (obj as OfflineData).timestamp === "number"
  );
};

export const isSyncQueue = (obj: unknown): obj is SyncQueue => {
  return (
    typeof obj === "object" &&
    obj !== null &&
    "type" in obj &&
    "data" in obj &&
    "timestamp" in obj &&
    "retryCount" in obj &&
    typeof (obj as SyncQueue).type === "string" &&
    typeof (obj as SyncQueue).timestamp === "number" &&
    typeof (obj as SyncQueue).retryCount === "number"
  );
}; 