@tailwind base;
@tailwind components;
@tailwind utilities;

/* Global text color override - ensure all text is white by default */
* {
  color: white;
}

/* Override all slate-800 text to be white */
.text-slate-800 {
  color: white !important;
}

/* Override all slate-900 text to be white */
.text-slate-900 {
  color: white !important;
}

/* Override all gray-800 text to be white */
.text-gray-800 {
  color: white !important;
}

/* Override all gray-900 text to be white */
.text-gray-900 {
  color: white !important;
}

/* Override all slate-700 text to be white */
.text-slate-700 {
  color: white !important;
}

/* Override all slate-600 text to be white */
.text-slate-600 {
  color: white !important;
}

/* Override all gray-700 text to be white */
.text-gray-700 {
  color: white !important;
}

/* Override all gray-600 text to be white */
.text-gray-600 {
  color: white !important;
}

/* Override all slate-500 text to be white */
.text-slate-500 {
  color: white !important;
}

/* Override all gray-500 text to be white */
.text-gray-500 {
  color: white !important;
}

/* Override all slate-400 text to be white */
.text-slate-400 {
  color: white !important;
}

/* Override all gray-400 text to be white */
.text-gray-400 {
  color: white !important;
}

/* Override all slate-300 text to be white */
.text-slate-300 {
  color: white !important;
}

/* Override all gray-300 text to be white */
.text-gray-300 {
  color: white !important;
}

/* Override all slate-200 text to be white */
.text-slate-200 {
  color: white !important;
}

/* Override all gray-200 text to be white */
.text-gray-200 {
  color: white !important;
}

/* Override all slate-100 text to be white */
.text-slate-100 {
  color: white !important;
}

/* Override all gray-100 text to be white */
.text-gray-100 {
  color: white !important;
}

/* Override all slate-50 text to be white */
.text-slate-50 {
  color: white !important;
}

/* Override all gray-50 text to be white */
.text-gray-50 {
  color: white !important;
}

/* Custom CSS for K53 components */

/* Difference markers for image comparison */
.difference-marker {
  position: absolute;
  width: 1rem;
  height: 1rem;
  background-color: rgb(239 68 68);
  border-radius: 9999px;
  cursor: pointer;
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.difference-marker:hover {
  background-color: rgb(220 38 38);
  transform: translate(-50%, -50%) scale(1.2);
  transition: all 0.2s ease-in-out;
}

/* Flashcard flip animation */
.rotate-y-180 {
  transform: rotateY(180deg);
}

/* Custom scrollbar for filter panels */
.filter-scroll::-webkit-scrollbar {
  width: 6px;
}

.filter-scroll::-webkit-scrollbar-track {
  background: rgb(51 65 85);
  border-radius: 3px;
}

.filter-scroll::-webkit-scrollbar-thumb {
  background: rgb(71 85 105);
  border-radius: 3px;
}

.filter-scroll::-webkit-scrollbar-thumb:hover {
  background: rgb(100 116 139);
}

/* Loading spinner animation */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Pulse animation for difference markers */
@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Custom focus styles for accessibility */
.focus-visible:focus-visible {
  outline: 2px solid rgb(59 130 246);
  outline-offset: 2px;
}

/* Image error state */
.image-error {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgb(51 65 85);
  color: rgb(148 163 184);
  font-size: 0.875rem;
  border: 1px dashed rgb(71 85 105);
}

/* Toast positioning */
.toast-container {
  position: fixed;
  top: 1rem;
  right: 1rem;
  z-index: 50;
}

/* Card hover effects */
.card-hover {
  transition: all 0.2s ease-in-out;
}

.card-hover:hover {
  transform: translateY(-2px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

/* Button loading state */
.button-loading {
  position: relative;
  color: transparent;
}

.button-loading::after {
  content: "";
  position: absolute;
  width: 16px;
  height: 16px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  border: 2px solid transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Responsive grid adjustments */
@media (max-width: 640px) {
  .responsive-grid {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
}

@media (min-width: 641px) and (max-width: 768px) {
  .responsive-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  .responsive-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (min-width: 1025px) and (max-width: 1280px) {
  .responsive-grid {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}

@media (min-width: 1281px) {
  .responsive-grid {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }
}

/* Accessibility improvements */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .border-slate-600 {
    border-color: rgb(255 255 255);
  }
  
  .text-slate-300 {
    color: rgb(255 255 255);
  }
  
  .bg-slate-800 {
    background-color: rgb(0 0 0);
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .animate-pulse {
    animation: none;
  }
  
  .transition-all {
    transition: none;
  }
  
  .card-hover:hover {
    transform: none;
  }
}
